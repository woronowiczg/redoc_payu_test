tags:
  - Payment
summary: Creating new order
description: OrderCreateRequest
operationId: orderCreateRequest
security:
  - OAuth token: []
parameters:
  $ref: ../../components/headers/ReqHeaders.yaml
requestBody:
  content:
    application/json:
      schema:
        type: object
        required:
          [customerIp, merchantPosId, description, currencyCode, totalAmount, products]
        properties:
          extOrderId:
            type: string
            description: ID of an order used in merchant system. Order identifier assigned by the merchant. It enables merchants to find a specific order in their system. This value must be unique within a single POS.
          notifyUrl:
            type: string
            description: The address for sending notifications
            example: https://your.eshop.com/notify
          customerIp:
            type: string
            description: "Payerâ€™s IP address, e.g. 123.123.123.123. Note: 0.0.0.0 is not accepted."
            examples:
              - "127.0.0.1"
          merchantPosId:
            type: string
            description: Point of sale ID.
            examples: 
              - "140332"
          validityTime:
            type: string
            description: Duration for the validity of an order (in seconds), during which time payment must be made. Default value 86400.
            example: "100000"
          description:
            type: string
            description: 	Description of the order.
          additionalDescription:
            type: string
            description: Additional description of the order.
          visibleDescription:
            type: string
            maxLength: 80
            description: ext visible on the PayU payment page.
          statementDescription:
            type: string
            maxLength: 22
            description: Payment recipient name followed by payment description (order ID, ticket number etc) visible on card statement. The name should be easy to recognize by the cardholder. If field is not provided, static name configured by PayU will be used.
          currencyCode:
            type: string
            description: Currency code compliant with ISO 4217 (e.g EUR).
            examples: 
              - EUR
          totalAmount:
            type: string
            description: Total price of the order in pennies (e.g. 1000 is 10.00 EUR). Applies also to currencies without subunits (e.g. 1000 is 10 HUF).
            example: "1000"
          cardOnFile:
            type: string
            description: 	Information about party initializing order.
            enum: [FIRST, STANDARD_CARDHOLDER, STANDARD_MERCHANT]
          recurring:
            type: string
            description: Marks the order as recurring payment. 
            enum: [FIRST, STANDARD]
          continueUrl:
            type: string
            description: Address for redirecting the customer after payment is commenced.
            example: www.example.com/path
          buyer:
            $ref: ../../components/objects/Buyer.yaml
          products:
            $ref: ../../components/arrays/Products.yaml
          payMethods:
            $ref: ../../components/objects/payMethod.yaml
          mcpData:
            type: object
            description: Section allows to pass currency conversion details if you chose to use Multi-Currency Pricing.
            required: [mcpCurrency, mcpAmount, mcpRate, mcpFxTableId, mcpPartnerId]
            properties: 
              mcpCurrency:
                type: string
                description: termCurrency from the rate table.
              mcpAmount:
                type: string
                description: baseCurrency amount converted to termCurrency.
              mcpRate:
                type: string
                description: Applied conversion rate.
              mcpFxTableId:
                type: string
                description: Applied FX rate table id.
              mcpPartnerId:
                type: string
                description: Id provided by PayU.
          threeDsAuthentication:
            type: object
            description: Contains optional fields required by 3DS 2 authentication protocol.
            required: [sdk]
            properties: 
              challangeRequested:
                type: string
                description: Merchant's preference regarding 3DS 2 challenge. Exclusive with exemption. Maybe overridden by PayU.
                enum: 
                  - "YES"
                  - "NO"
                  - "MANDATE"
              exemption:
                type: object
                required: 
                  - value
                  - rejectionHandling
                description: Merchant's preference regarding SCA exemption to be used to exempt card payment from 3DS authentication. Exclusive with challengeRequested. Requires additional configuration to be enabled.
                properties: 
                  value:
                    type: string
                    description: Either LOW_RISK (also known as TRA - transaction risk analysis compliant with SCA requirements has been performed by the merchant) or LOW_VALUE (low value payment, up to 30 EUR or equivalent in other currency).
                    enum: [LOW_RISK, LOW_VALUE]
                  rejectionHandling:
                    type: string
                    description: Either PERFORM_AUTHENTICATION (PayU will return response with WARNING_CONTINUE_3DS and redirection URL code if exemption cannot be applied) or DECLINE (PayU will decline the payment if exemption cannot be applied - error message will be returned synchronously in OrderCreateResponse).
                    enum: [PERFORM_AUTHENTICATION, DECLINE]
                  riskScore:
                    type: string
                    maxLength: 128
                    description: Risk score assigned by merchant's antifraud tool. For informative purposes only.
              browser:
                description: Browser data required for 3DS 2 browser flow. If not provided, these data will be collected by PayU. It is strongly recommended to include it when charging a stored card (multi-use token), because in some cases it will spare you redirection to PayU's authentication page.
                required: 
                  [acceptHeaders, requestIP, screenWidth, javaEnabled, timezoneOffset, screenHeight, userAgent, colorDepth, language]
                properties: 
                  acceptHeaders:
                    type: string
                    description: Exact content of the HTTP accept headers as sent from the payer's browser.
                  requestIP:
                    type: string
                    description: IP address of the browser as returned by the HTTP headers.
                  screenWidth:
                    type: string
                    description: Total width of the payer's screen in pixels. Obtained from the screen.width HTML DOM property.
                  javaEnabled:
                    type: boolean
                    description: Obtained from the navigator HTML DOM object.
                  timezoneOffset:
                    type: string
                    description: Obtained from the getTimezoneOffset() method applied to Date object.
                  screenHeight:
                    type: string
                    description: Obtained from the navigator HTML DOM object.
                  userAgent:
                    type: string
                    description: Exact content of the HTTP user-agent header.
                  colorDepth:
                    type: string
                    description: Obtained from payer's browser using the screen.colorDepth HTML DOM property.
                  language:
                    type: string
                    description: Obtained from payer's browser using the navigator.language HTML DOM property. Max. 8 chars.
              sdk:
                type: object
                description: 	Required if 3DS 2 is to be natively supported in your mobile app. Content needs to be generated by a certified 3DS 2 SDK. This information is not required, but it is strongly recommended to include it when charging a stored card (multi-use token).
                required: 
                  [sdkReferenceNumber, sdkMaxTimeout, sdkAppID, sdkEncData, sdkTransID, sdkEphemPubKey]
                properties: 
                  sdkReferenceNumber:
                    type: string
                    example: DS_LOA_SDK_ADBV_739485_94783
                  sdkMaxTimeout:
                    type: string
                    description: 	Indicates the maximum amount of time (in minutes) for all exchanges. The field shall have value greater or equal to 05.
                  sdkAppID:
                    type: string
                    example: 9063b12c-fcde-43c7-b28e-8d0af5520e8a
                  sdkEncData:
                    type: string
                    description: Data encrypted by the 3DS SDK.
                  sdkTransID:
                    type: string
                    example: b60c9879-ac77-4918-a317-7b01c4317053/8Q==.
                  sdkEphemPubKey:
                    type: string
                    description: Public key component of the ephemeral key pair generated by the 3DS SDK and used to establish session keys between the 3DS SDK and the issuer.
              merchantRiskIndicator:
                type: object
                description: Set of fields helping to assess risk connected with the order itself (type of goods purchased, shipping method etc.).
                properties: 
                  orderType:
                    type: string
                    enum: [PURCHASE, ACC_FUNDING, LOAN]
                  shipIndicator:
                    type: string
                    enum: [BILLING_ADDRESS, VERIFIED_ADDRESS, OTHER_ADDRESS, SHIP_TO_STORE, DIGITAL_GOODS, TICKETS, NOT_SHIPPED]
                    description: Indicates shipping method chosen for the order.
                  preOrdered:
                    type: boolean
                    description: Indicates order for merchandise with a future availability or release date.
                  preOrderedDate:
                    type: string
                    example: "2019-03-27T10:57:59.000+01:00"
                    format: "2019-03-27T10:57:59.000+01:00"
                    description: ISO format applies.
                  deliveryTimeFrame:
                    type: string
                    enum: [ELECTRONIC, SAME_DAY, OVERNIGHT, TWO_OR_MORE_DAYS]
                  reordered:
                    type: boolean
                    description: Indicates if the same purchase has been ordered again.
                  merchantFunds:
                    type: object
                    description: Indicates whether merchant's own funding (e.g. a gift card) has been used to partially pay for the order. Sum of amounts provided here and of <totalAmount> field denote the real value of order in merchant's system.
                    required: [amount, currencyCode]
                    properties: 
                      amount:
                        type: string
                        description: In pennies.
                      currencyCode:
                        type: string
                        description: Currency code compliant with ISO 4217.
              recurring:
                type: object
                description: Additional information in case of a recurring payment.
                properties: 
                  frequency:
                    type: string
                    description: Minimum number of days between payments.
                  expiry:
                    type: string
                    format: '2019-03-27T10:57:59.000+01:00'
                    description: Date after no further recurring payments will be performed.
              cardholder:
                type: object
                description: Describes cardholder's account data in merchant's possession, including details of account run for the cardholder in merchant's system.
                properties: 
                  name:
                    type: string
                    description: Cardholder name and surname.
                  accountInformation:
                    type: object
                    description: Informations about cardholders account.
                    properties: 
                      createDate:
                        type: string
                        format: '2019-03-27T10:57:59.000+01:00'
                        description: Date when the account has been created for the cardholder.
                      suspiciousActivity:
                        type: boolean
                        description: Indicates whether merchant has experienced suspicious/fraudulent activity for this account.
                      deliveryAddressFirstUsedDate:
                        type: string
                        format: '2019-03-27T10:57:59.000+01:00'
                        description: Date when the shipping address used for this order was first used.
                      deliveryAdressUsageIndicator:
                        type: string
                        enum: [THIS_TRANSACTION, LESS_THAN_30_DAYS, 30_TO_60_DAYS, MORE_THAN_60_DAYS]
                        description: Indicates when this shipping address was first used.
                      pastOrdersYear:
                        type: integer
                        description: Orders created in merchant's system for this account in the past 12 months.
                        minimum: 1
                        maximum: 9999
                      pastOrdersDay:
                        type: integer
                        description: Orders created in merchant's system for this account in the last 24 hours.
                        minimum: 1
                        maximum: 9999
                      purchasesLastSixMonths:
                        type: integer
                        description: Fulfilled (successful) orders created in merchant's system for this account in the past 6 months.
                        minimum: 1
                        maximum: 9999
                      changeDate:
                        type: string
                        format: '2019-03-27T10:57:59.000+01:00'
                        description: Date when account details were last changed.
                      changeIndicator:
                        type: string
                        enum: [THIS_TRANSACTION, LESS_THAN_30_DAYS, 30_TO_60_DAYS, MORE_THAN_60_DAYS]
                        description: Indicates time when account information was last changed.
                      passwordChanged:
                        type: string
                        format: '2019-03-27T10:57:59.000+01:00'
                        description: Date when account password was last changed.
                      passwordChangeIndicator:
                        type: string
                        enum: [NO_CHANGE, THIS_TRANSACTION, LESS_THAN_30_DAYS, 30_TO_60_DAYS, MORE_THAN_60_DAYS]
                        description: Indicates whether and when the password was last changed.
                      nameToRecipientMatch:
                        type: boolean
                        description: Indicates whether cardholder's name matches recipient's name.
                      addCardAttemptsDay:
                        type: string
                        description: Indicates attempts to add a card to cardholder's account in merchant's system within last 24 hours.
                      authMethod:
                        type: string
                        enum: [GUEST, LOGIN, FEDERATED_ID, THIRD_PARTY, ISSUER, FIDO]
                        description: Authentication method used to recognize cardholder.
                      authDateTime:
                        type: string
                        format: '2019-03-27T10:57:59.000+01:00'
                        description: Date and time when authentication was performed.
                      cardAddedDate:
                        type: string
                        format: '2019-03-27T10:57:59.000+01:00'
                        description: Date when card account has been stored with merchant.
                      cardAddedIndicator:
                        type: string
                        enum: [GUEST, THIS_TRANSACTION, LESS_THAN_30_DAYS, 30_TO_60_DAYS, MORE_THAN_60_DAYS]
                        description: Indicates if and when the card was stored with merchant.
                  billingAddress:
                    type: object
                    properties: 
                      street:
                        type: string
                        minLength: 1
                        maxLength: 50
                        description: Full street address, incl. apartment number.
                      postalCode:
                        type: string
                        minLength: 1
                        maxLength: 16
                        description: Postal/ZIP code.
                      city:
                        type: string
                        minLength: 1
                        maxLength: 50
                        description: City name.
                      state:
                        type: string
                        minLength: 1
                        maxLength: 3
                        description: Country principal subdivision like "state" or "province". If provided, must be a two-letter country code compliant with ISO-3166.
                      countryCode:
                        type: string
                        minLength: 1
                        maxLength: 2
                        description: Two-letter country code compliant with ISO-3166.
          credit:
            $ref: ../../components/objects/credit.yaml
  description: Parameters for OrderCreateRequest
  required: true
responses:
  200:
    description: OK
    content:
      application/json:
        schema:
          type: object
          properties: 
            status:
              type: object
              properties:
                statusCode:
                  type: string
                  description: Response code
            redirectUri:
              type: string
            orderId:
              type: string
            extOrderId:
              type: string
  201:
    description: Created
    content:
      application/json:
        schema:
          type: object
          properties: 
            status:
              type: object
              properties: 
                statusCode:
                  type: string
            redirectUri:
              type: string
            orderId:
              type: string
            extOrderId:
              type: string
  302:
    description: Found
    content:
      application/json:
        schema:
          type: object
          properties: 
            status:
              type: object
              properties: 
                statusCode:
                  type: string
                  description: Payment status.
                severity:
                  type: string
            redirectUri:
              type: string
              description: Url redirection address with payment summary.
            iframeAllowed:
              type: boolean
              example: true
            threeDsProtocolVersion:
              type: string
              enum: [3DS, 3DS2]
            orderId:
              type: string
              description: Order identifier given by PayU.
            payMethods:
              type: object
              properties: 
                card:
                  type: object
                  properties: 
                    number:
                      type: string
                      description: Card number.
                    expirationMonth:
                      type: integer
                      description: Card expiration month.
                    expirationYear:
                      type: integer
                      description: Card expiration year.
                type:
                  type: string
                value:
                  type: string
            extOrderId:
              type: string
              description: Order identifier given by merchant.
        # examples: 
        #   success:
        #     summary: SUCCESS
        #     value: 
        #       status: SUCCESS
        #       redirectUri: "{payment_summary_redirection_url}"
        #       orderId: WZHF5FFDRJ140731GUEST000P01
        #       extOrderId: "{YOUR_EXT_ORDER_ID}"
        #   warning_continue_redirect:
        #     summary: WARNING_CONTINUE_REDIRECT
        #     value:
        #       status: WARNING_CONTINUE_REDIRECT
        #       redirectUri: "{payment_summary_redirection_url}"
        #       orderId: WZHF5FFDRJ140731GUEST000P01
        #       extOrderId: "{YOUR_EXT_ORDER_ID}"
          
  400:
    description: Bad Request
    content:
      application/json:
        schema:
          type: object
          properties: 
            status:
              type: object
              properties: 
                statusCode:
                  type: string
                  description: Error type.
                severity:
                  type: string
                code:
                  type: string
                  description: Identification code of specific error.
                codeLiteral:
                  type: string
                  description: Cause of the error.
                statusDesc:
                  type: string
                  description: Error description.
        # examples: 
        #   error_syntax:
        #     summary: ERROR_SYNTAX
        #     value: 
        #       status: ERROR_SYNTAX
        #   error_value_invalid:
        #     summary: ERROR_VALUE_INVALID
        #     value: 
        #       status: ERROR_VALUE_INVALID
  401:
    description: Unauthorized
    content: 
      application/json: 
        schema: 
          type: object
          properties: 
            status:
              type: object
              properties: 
                statusCode:
                  type: string
                  description: Error type.
                code:
                  type: string
                  description: Identification code of specific error.
                codeLiteral:
                  type: string
                  description: Cause of the error.
                statusDesc:
                  type: string
                  description: Error description.
  403:
    description: Forbidden
    content: 
      application/json: 
        schema: 
          type: object
          properties: 
            status:
              type: object
              properties: 
                statusCode:
                  type: string
                  description: Error type.
                code:
                  type: string
                  description: Identification code of specific error.
                codeLiteral:
                  type: string
                  description: Cause of the error.
                statusDesc:
                  type: string
                  description: Error description.
  500:
    description: Internal server error
    content: 
      application/json: 
        schema: 
          type: object
          properties: 
            status:
              type: object
              properties: 
                statusCode:
                  type: string
                  description: Error type.
                codeLiteral:
                  type: string
                  description: Cause of the error.
                statusDesc:
                  type: string
                  description: Error description.
